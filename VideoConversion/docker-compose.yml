version: '3.8'

services:
  videoconversion:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: videoconversion-app
    ports:
      - "5065:8080"  # 映射到原来的端口5065
      - "7065:8081"  # HTTPS端口
    environment:
      - ASPNETCORE_ENVIRONMENT=Production
      - ASPNETCORE_URLS=http://+:8080
      - DOTNET_RUNNING_IN_CONTAINER=true
      # 数据库连接
      - ConnectionStrings__DefaultConnection=Data Source=/app/data/videoconversion.db
      # 视频转换配置
      - VideoConversion__UploadPath=/app/uploads
      - VideoConversion__OutputPath=/app/outputs
      - VideoConversion__MaxFileSize=2147483648
      - VideoConversion__MaxConcurrentConversions=2
      - VideoConversion__CleanupIntervalMinutes=60
      # 日志配置
      - Logging__LogLevel__Default=Information
      - Logging__LogLevel__Microsoft.AspNetCore=Warning
    volumes:
      - ./data:/app/data
      - ./logs:/app/logs
      - ./uploads:/app/uploads
      - ./outputs:/app/outputs
      - ./temp_uploads:/app/temp_uploads
    restart: unless-stopped
    # 资源限制
    deploy:
      resources:
        limits:
          cpus: '2.0'
          memory: 4G
        reservations:
          cpus: '0.5'
          memory: 1G
    networks:
      - videoconversion-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/api/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # 可选：Nginx反向代理
  nginx:
    image: nginx:alpine
    container_name: videoconversion-nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/ssl:/etc/nginx/ssl:ro
      - ./outputs:/var/www/outputs:ro  # 静态文件服务
    depends_on:
      - videoconversion
    restart: unless-stopped
    profiles:
      - with-nginx
    networks:
      - videoconversion-network

volumes:
  data:
    driver: local
  logs:
    driver: local
  uploads:
    driver: local
  outputs:
    driver: local
  temp_uploads:
    driver: local

# 网络定义
networks:
  videoconversion-network:
    driver: bridge
